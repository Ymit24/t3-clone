# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#
default: &default
  adapter: postgresql
  encoding: unicode
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>

development:
  primary: &primary_development # Define primary development connection
    <<: *default
    database: t3_clone_development
    username: t3_clone # Or your local PostgreSQL username
    # password: # Uncomment and set if your local user requires a password

  cache: # Separate database for cache in development
    <<: *primary_development
    database: t3_clone_development_cache
    migrations_paths: db/cache_migrate

  queue: # Separate database for queue in development
    <<: *primary_development
    database: t3_clone_development_queue
    migrations_paths: db/queue_migrate

  cable: # Separate database for cable in development
    <<: *primary_development
    database: t3_clone_development_cable
    migrations_paths: db/cable_migrate

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: t3_clone_test
  # username: t3_clone # Uncomment if your test environment uses a specific user

production:
  # The primary database connection for your main app, using Render's DATABASE_URL
  primary: &primary_production
    <<: *default
    url: <%= ENV['DATABASE_URL'] %>

  <%
    # Safely parse DATABASE_URL components for auxiliary connections
    # This block ensures URI.parse is only called if ENV['DATABASE_URL'] is present,
    # preventing errors in development where it's typically nil.
    db_uri_parsed = ENV['DATABASE_URL'].present? ? URI.parse(ENV['DATABASE_URL']) : nil
    production_host = db_uri_parsed&.host
    production_port = db_uri_parsed&.port
    production_username = db_uri_parsed&.user
    production_password = db_uri_parsed&.password
    production_base_db_name = db_uri_parsed&.path&.split('/')&.last
  %>

  cache:
    <<: *default # Inherit basic adapter/encoding/pool
    host: <%= production_host %>
    port: <%= production_port %>
    username: <%= production_username %>
    password: <%= production_password %>
    database: <%= "#{production_base_db_name}_cache" if production_base_db_name.present? %>
    migrations_paths: db/cache_migrate

  queue:
    <<: *default # Inherit basic adapter/encoding/pool
    host: <%= production_host %>
    port: <%= production_port %>
    username: <%= production_username %>
    password: <%= production_password %>
    database: <%= "#{production_base_db_name}_queue" if production_base_db_name.present? %>
    migrations_paths: db/queue_migrate

  cable:
    <<: *default # Inherit basic adapter/encoding/pool
    host: <%= production_host %>
    port: <%= production_port %>
    username: <%= production_username %>
    password: <%= production_password %>
    database: <%= "#{production_base_db_name}_cable" if production_base_db_name.present? %>
    migrations_paths: db/cable_migrate
